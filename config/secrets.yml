# Be sure to restart your server when you modify this file.

# Your secret key is used for verifying the integrity of signed cookies.
# If you change this key, all old signed cookies will become invalid!

# Make sure the secret is at least 30 characters and all random,
# no regular words or you'll be exposed to dictionary attacks.
# You can use `rake secret` to generate a secure secret key.

# Make sure the secrets in this file are kept private
# if you're sharing your code publicly.

development:
  admin_name: Steven
  admin_email: steven@rigil.com
  admin_password: changeme
  email_provider_username: steven@rigil.com
  email_provider_apikey: iQ1iVPBsVB6J7p0Uc1UHzQ
  domain_name: meetingexpectationsapp.com
  secret_key_base: 9c2ce57b9d936304a4f80e1bdf631fcc6ce8475eb1adb1cc1777b279678809771a3f408696ea1485b620ac5adc8783471a147e30a029fa0e9c040687e3fdff20
  # mailchimp
  mailchimp_api_key: 515f37bb4a0835f51066c56bac9a1400-us7
  mailchimp_list_id: 120fc34b61

  # # new relic
  # NEW_RELIC_APP_NAME: MeetingExpectations

  # AWS S3 Rigilcorp acct MeetingExpectationsDev
  s3_bucket: meetingexpectations-dev
  s3_access_key_id: AKIAJVWYUZCJWTFBXJYQ
  s3_secret_access_key: D4bxEbuK3NGqbVzXJzevf7+z606BGeYuCqbEoVRY


test:
  domain_name: example.com 
  secret_key_base: 7a187c013e0f63e7423be3a26a5d14159ec6ad14b7cada80dbf72f8098316aab6fa4012faa15b8769b79d79b86f87877de3334d78634d51049e335567c40e624

# Do not keep production secrets in the repository,
# instead read values from the environment.
production:
  admin_name: <%= ENV["ADMIN_NAME"] %>
  admin_email: <%= ENV["ADMIN_EMAIL"] %>
  admin_password: <%= ENV["ADMIN_PASSWORD"] %>
  email_provider_username: <%= ENV["MANDRILL_USERNAME"] %>
  email_provider_apikey: <%= ENV["MANDRILL_APIKEY"] %> 
  domain_name: meetingexpectationsapp.com
  secret_key_base: <%= ENV["SECRET_KEY_BASE"] %>

# Amazon s3 rigilcorp
# MeetingExpectations
# Access Key ID:
# AKIAJ575B4O7AYXMNZRQ
# Secret Access Key:
# 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

# {
#   "Version": "2012-10-17",
#   "Statement": [
#     {
#       "Sid": "Stmt1414443588000",
#       "Effect": "Allow",
#       "Action": [
#         "s3:*"
#       ],
#       "Resource": [
#         "arn:aws:s3:::meetingexpectations-dev/*"
#       ]
#     }
#   ]
# }

# IAM user MeetingExpectationsDev
# Access Key ID:
# AKIAJVWYUZCJWTFBXJYQ
# Secret Access Key:
# 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

# Amazon s3 steps
#
# Step 1: create bucket
#
# Step 2: create IAM user
#
# Step 3: make a IAM user policy to give all privileges for the bucket
#   allows the IAM user to put an object into the bucket
#   minimum permissions tbd
#
#   IAM > Users > MeetingExpectations > Permissions - User Policies - Attach User Policy > Policy Generator
#     AWS Service = Amazon S3
#     Actions = All Actions
#     Resource Name = arn:aws:s3:::meetingexpectations-dev/*
#
# Step 4: no action needed, default bucket policy is public read-only
